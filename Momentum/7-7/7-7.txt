1. 배열의 각각을 구분해주기 위해서 text와 id값으로 저장할 필요가 있음.ㄴ
ex) [{text: hi, id:11564846513}]
현재는 [a,b,c,d,e] 이런 식으로 저장되어 있는 형태임.

2. toDos에 newToDo(문자)를 push 하는게 아니라 newTodoObj라는 객체를 push할 것임.
newTodoObj는 text와 id 값을 가지고 있음.
const newTodoObj = {
    text:newToDo,
    id: Date.now(),
};
그리고 paintToDo(new TodoObj)를 해줌.

3. 이때 paintToDo를 하는 과정에서 화면에 object가 출력되는 문제가 생김.
화면에 object가 아닌 text를 출력하기 위해서 list_span.innerText = newtoDo.text로 바꿔줘야 함.

4. list에는 id값을 넣어주으로써 각각을 구분할 수 있게 해준다.
list.id = newToDo.id;

toDos array와 localStorage는 같지 않다.
toDos array => 데이터베이스
localStorage => toDos array를 복사해두는 곳.

deleteTodo는 어떤 HTML의 element를 지워야 하는지 알고 있다. 하지만 어떤 todo text를 데치터베이스에서 지워야 하는지 모른다.
그래서 toDos를 더 좋은 방법으로 만들어보자.

todo들에게 ID를 랜덤으로 주는 방법이다. 우리는 text대신에 objet를 만들고 싶은 것이다.
[{id: 123456789, text:"coffee"}]
Date.now()는 밀리초(1000분의 1초)를 주는 함수